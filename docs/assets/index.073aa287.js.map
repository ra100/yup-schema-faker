{"version":3,"file":"index.073aa287.js","sources":["../../vite/dynamic-import-polyfill","../../src/views/ToC/ToC.vue","../../src/views/ToC/Index.vue","../../src/views/Header.vue","../../src/utils.ts","../../src/faker.ts","../../src/views/Playground.vue","../../src/views/Seed.vue","../../src/views/Full.vue","../../src/views/Custom/string-json.ts","../../src/views/Custom/custom-mixed.ts","../../src/views/Custom/index.vue","../../src/views/BackToTop.vue","../../src/App.vue","../../src/components/FakeButton.vue","../../src/components/CopyButton.vue","../../src/components/Data.vue","../../src/components/Preview.vue","../../src/components/DemoGenerator.vue","../../src/components/Link.vue","../../src/main.ts"],"sourcesContent":["const p = function polyfill(modulePath = '.', importFunctionName = '__import__') {\n    try {\n        self[importFunctionName] = new Function('u', `return import(u)`);\n    }\n    catch (error) {\n        const baseURL = new URL(modulePath, location);\n        const cleanup = (script) => {\n            URL.revokeObjectURL(script.src);\n            script.remove();\n        };\n        self[importFunctionName] = (url) => new Promise((resolve, reject) => {\n            const absURL = new URL(url, baseURL);\n            // If the module has already been imported, resolve immediately.\n            if (self[importFunctionName].moduleMap[absURL]) {\n                return resolve(self[importFunctionName].moduleMap[absURL]);\n            }\n            const moduleBlob = new Blob([\n                `import * as m from '${absURL}';`,\n                `${importFunctionName}.moduleMap['${absURL}']=m;`\n            ], { type: 'text/javascript' });\n            const script = Object.assign(document.createElement('script'), {\n                type: 'module',\n                src: URL.createObjectURL(moduleBlob),\n                onerror() {\n                    reject(new Error(`Failed to import: ${url}`));\n                    cleanup(script);\n                },\n                onload() {\n                    resolve(self[importFunctionName].moduleMap[absURL]);\n                    cleanup(script);\n                }\n            });\n            document.head.appendChild(script);\n        });\n        self[importFunctionName].moduleMap = {};\n    }\n};__VITE_IS_MODERN__&&p(\"/assets/\");","<template lang=\"pug\">\ntemplate(v-for=\"node of descendants\" :key=\"node.id\")\n  a.block.mt-1.whitespace-nowrap.overflow-x-auto(:style=\"{ 'marginLeft': level * 24 + 'px' }\" :href=\"`#${node.id}`\") # {{ node.name }}\n  ToC(v-if=\"node.descendants\" :descendants=\"node.descendants\" :level=\"node.level\")\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'ToC',\n  props: ['descendants', 'level'],\n})\n</script>\n","<template lang=\"pug\">\n.rounded.pb-1.my-2.bg-gray-800.text-gray-400\n  button.inline-block.w-full.text-black(@click.stop=\"visible = !visible\") Table of Content\n  .m-4(v-show=\"visible\")\n    ToC(:descendants=\"toc\")\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, nextTick, onMounted, ref } from 'vue'\nimport ToC from './ToC.vue'\n\ninterface ToC {\n  id: string\n  name: string\n  descendants?: ToC[]\n  level: number\n}\n\nconst isSection = (el: HTMLAnchorElement) => el.href.startsWith(window.location.origin)\nconst toToC = (el: HTMLAnchorElement): ToC => {\n  return {\n    id: new URL(el.href).hash.slice(1),\n    name: el.innerText,\n    descendants: [],\n    level: 0,\n  }\n}\nconst toToCTree = (tocTree: ToC[], toc: ToC) => {\n  const level = toc.id.split('.').length\n  toc = { ...toc, level }\n  if (level === 1) {\n    tocTree.push(toc)\n  } else if (level === 2) {\n    const descendants = (tocTree[tocTree.length - 1].descendants = tocTree[tocTree.length - 1].descendants ?? [])\n    descendants.push(toc)\n  } else {\n    const descendants = (tocTree[tocTree.length - 1].descendants = tocTree[tocTree.length - 1].descendants ?? [])\n    const subDescendants = (descendants[descendants.length - 1].descendants =\n      descendants[descendants.length - 1].descendants ?? [])\n    subDescendants.push(toc)\n  }\n  return tocTree\n}\n\nexport default defineComponent({\n  components: {\n    ToC,\n  },\n  setup() {\n    const visible = ref(false)\n\n    const toc = ref<ToC[]>([])\n    onMounted(async () => {\n      await nextTick()\n\n      toc.value = Array.from(document.querySelectorAll('a'))\n        .filter(isSection)\n        .map(toToC)\n        .reduce(toToCTree, [] as ToC[])\n\n      await nextTick()\n    })\n\n    return {\n      visible,\n      toc,\n    }\n  },\n})\n</script>\n","<template lang=\"pug\">\nheader\n  a.text-black(href=\"https://github.com/iendeavor/yup-schema-faker\") Yup Schema Faker\n  .float-right.text-black\n    button.inline-block.mr-2.border.border-gray-400.rounded.px-2.mb-2(@click=\"reloadToClearSeedValue\") Reload to clear seed value\n    span {{ VERSION }}\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport { __VERSION__ } from 'yup-schema-faker'\n\nexport default defineComponent({\n  setup() {\n    const reloadToClearSeedValue = () => {\n      location.search = ''\n    }\n\n    return {\n      reloadToClearSeedValue,\n      VERSION: 'v' + __VERSION__,\n    }\n  },\n})\n</script>\n","const searchParams = new URLSearchParams(window.location.search)\nfunction get(key: string) {\n  const value = searchParams.get(key)\n  return value === null ? null : decodeURIComponent(value)\n}\nfunction set(key: string, value: string) {\n  if (get(key) !== value) {\n    searchParams.set(key, encodeURIComponent(value))\n    if (window.history.pushState) {\n      const newUrl = `${location.origin}${location.pathname}?${searchParams.toString()}${location.hash}`\n      window.history.pushState({ path: newUrl }, '', newUrl)\n    }\n  }\n}\nexport const query = {\n  get,\n  set,\n}\n","import { ref } from 'vue'\nimport { query } from './utils'\nimport { fake as yupSchemaFake, seed } from 'yup-schema-faker'\n\nexport const seedValue: number = JSON.parse(query.get('seedValue') ?? JSON.stringify(Math.floor(Math.random() * 1e9)))\nquery.set('seedValue', JSON.stringify(seedValue))\nexport const isInit = ref(true)\nexport const fake = (schema: Parameters<typeof yupSchemaFake>['0'], option?: Parameters<typeof yupSchemaFake>['1']) => {\n  if (isInit.value) {\n    seed(seedValue)\n  }\n  return yupSchemaFake(schema, option)\n}\n","<template lang=\"pug\">\nLink(label=\"Playground\" level=\"1\")\nPreview(:fake=\"custom.fake\" :snippet=\"custom.snippet\" :data=\"custom.data\" contenteditable @update:snippet=\"onUpdateSnippet\")\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive, watchEffect } from 'vue'\nimport { mixed, bool, boolean, string, number, date, array, object, ref, lazy } from 'yup'\nimport * as yup from 'yup'\nimport { fake } from '../faker'\nimport { query } from '../utils'\n\nexport default defineComponent({\n  inheritAttrs: false,\n  setup() {\n    const defaultCode = `\n// Hint:\n// 1. You could edit this to use your schema and context (optional)\n// 2. You could access \\`yup, mixed, bool, boolean, string, number, date, array, object, ref, lazy and its methods\\`\n\nconst registerForm = object()\n  .strict()\n  .required()\n  .noUnknown()\n  .shape({\n    email: string().defined().email(),\n    phone: string().matches(/(^\\\\([0-9]{3}\\\\)[0-9]{3}-[0-9]{4}$|^[0-9]{3}-[0-9]{3}-[0-9]{4}$)/),\n    birthday: date().min('1900-01-01T00:00:00Z').max(new Date()),\n    password: string().defined().matches(/\\\\w{8,20}/),\n    confirmPassword: ref('password'),\n  })\n\nconst node = mixed().when('value', {\n  is: value => value > 60,\n  then: lazy(() => tree),\n  otherwise: mixed().defined().oneOf([null]),\n})\nconst tree = object()\n  .strict()\n  .required()\n  .noUnknown()\n  .shape({\n    value: number().strict().required().min(0).max(100),\n    left: node,\n    right: node,\n  })\n\nconst schema = mixed().when('$isRegisterForm', {\n  is: value => value,\n  then: registerForm,\n  otherwise: tree,\n})\n\nconst context = { isRegisterForm: true }\n    `.trim()\n\n    const custom = reactive({\n      fake() {\n        try {\n          const [schema, context] = new Function(\n            'yup, mixed, bool, boolean, string, number, date, array, object, ref, lazy',\n            '\"use strict\"; ' + custom.snippet + '; return [schema, context];',\n          )(yup, mixed, bool, boolean, string, number, date, array, object, ref, lazy)\n\n          custom.data = fake(schema, { context })\n        } catch (error) {\n          alert('Syntax error, please open console to see more info.')\n          console.error(error)\n        }\n      },\n      data: undefined,\n      snippet: defaultCode,\n    })\n\n    const searchParamKey = 'playground.snippet'\n    custom.snippet = query.get(searchParamKey) ?? custom.snippet\n    watchEffect(() => {\n      query.set(searchParamKey, custom.snippet)\n    })\n\n    custom.fake()\n\n    const onUpdateSnippet = (value: string) => {\n      custom.snippet = value\n    }\n\n    return {\n      custom,\n      defaultCode,\n      onUpdateSnippet,\n      query,\n    }\n  },\n})\n</script>\n","<template lang=\"pug\">\nLink(label=\"Seed\" level=\"1\")\nbutton.text-black.border.border-gray-400.rounded.px-2.mb-2(@click=\"reloadToResetSeedValue\") Reload to reset seed value\nPreview(:fake=\"fake\" :snippet=\"snippet\" :data=\"data\")\n</template>\n\n<script lang=\"ts\">\nimport { fake } from '../faker'\nimport { defineComponent, ref } from 'vue'\nimport * as yup from 'yup'\n\nexport default defineComponent({\n  setup() {\n    const snippet = `\nyup.array().of(\n  yup.object({\n    boolean: yup.boolean(),\n    number: yup.number(),\n    string: yup.string(),\n    date: yup.date(),\n  })\n)\n    `.trim()\n    const data = ref()\n    const reloadToResetSeedValue = () => {\n      window.location.reload()\n    }\n    const doFake = () => {\n      data.value = fake(\n        yup.array().of(\n          yup.object({\n            boolean: yup.boolean(),\n            number: yup.number(),\n            string: yup.string(),\n            date: yup.date(),\n          }),\n        ),\n      )\n    }\n    doFake()\n\n    return {\n      reloadToResetSeedValue,\n      snippet,\n      data,\n      fake: doFake,\n    }\n  },\n})\n</script>\n","<template lang=\"pug\">\nLink(label=\"yup\" level=\"1\")\ntemplate(v-for=\"schemas, type of schemasOfType\" :key=\"type\")\n  Link(:label=\"type\" level=\"2\")\n\n  template(v-for=\"schema, label of schemas\" :key=\"schema\")\n    demo-generator(:label=\"label + ''\" :snippet=\"schema\")\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nexport default defineComponent({\n  setup() {\n    const schemasOfType = {\n      'yup.ref': {\n        '': `\nconst schema = object({\n  key: mixed(),\n  ref: ref('key')\n})\n  .defined()\n  .strict()\n  .noUnknown()\n`.trim(),\n      },\n      'yup.lazy': {\n        '': `\nconst schema = object()\n  .strict()\n  .required()\n  .noUnknown()\n  .shape({\n    value: number().strict().required().min(0).max(100),\n    left: mixed().when('value', {\n      is: value => value > 60,\n      then: lazy(() => schema),\n      otherwise: mixed().defined().oneOf([undefined]),\n    }),\n    right: mixed().when('value', {\n      is: value => value > 60,\n      then: lazy(() => schema),\n      otherwise: mixed().defined().oneOf([undefined]),\n    }),\n  })\n`.trim(),\n      },\n      'yup.mixed': {\n        'yup.mixed.default': 'const schema = mixed().default(\"A default value\")',\n        'yup.mixed.nullable': 'const schema = mixed().defined().nullable()',\n        'yup.mixed.required': 'const schema = mixed().required()',\n        'yup.mixed.notRequired': 'const schema = mixed().notRequired()',\n        'yup.mixed.defined': 'const schema = mixed().defined()',\n        'yup.mixed.oneOf': \"const schema = mixed().defined().oneOf(['foo', 42])\",\n        'yup.mixed.notOneOf': 'const schema = number().defined().notOneOf([1, 2]).integer().min(1).max(5)',\n        'yup.mixed.when': `\nconst schema = object().defined().strict().noUnknown().shape({\n  value: boolean().defined(),\n  reverse: boolean().defined().when('value', {\n    is: value => value,\n    then: boolean().isFalse(),\n    otherwise: boolean().isTrue(),\n  })\n})\n`.trim(),\n      },\n      'yup.boolean': {\n        'yup.boolean.isTrue': 'const schema = boolean().defined().isTrue()',\n        'yup.boolean.isFalse': 'const schema = boolean().defined().isFalse()',\n      },\n      'yup.number': {\n        'yup.number.min': 'const schema = number().defined().min(1).integer().max(5)',\n        'yup.number.max': 'const schema = number().defined().max(5).integer().min(1)',\n        'yup.number.moreThan': 'const schema = number().defined().moreThan(1).integer().lessThan(5)',\n        'yup.number.lessThan': 'const schema = number().defined().lessThan(5).integer().moreThan(1)',\n        'yup.number.positive': 'const schema = number().defined().positive().max(5)',\n        'yup.number.negative': 'const schema = number().defined().negative().min(-5)',\n        'yup.number.integer': 'const schema = number().defined().integer().min(-5).max(5)',\n      },\n      'yup.date': {\n        'yup.date.min': 'const schema = date().defined().min(new Date())',\n        'yup.date.max': 'const schema = date().defined().max(new Date())',\n      },\n      'yup.string': {\n        'yup.string.required': 'const schema = string().required()',\n        'yup.string.length': 'const schema = string().defined().length(5)',\n        'yup.string.min': 'const schema = string().defined().min(5)',\n        'yup.string.max': 'const schema = string().defined().max(5)',\n        'yup.string.matches': 'const schema = string().defined().matches(/\\\\w{1,5}/)',\n        'yup.string.email': 'const schema = string().defined().email()',\n        'yup.string.url': 'const schema = string().defined().url()',\n        'yup.string.uuid': 'const schema = string().defined().uuid()',\n        'yup.string.trim': 'const schema = string().defined().strict().trim()',\n        'yup.string.lowercase': 'const schema = string().defined().strict().lowercase()',\n        'yup.string.uppercase': 'const schema = string().defined().strict().uppercase()',\n      },\n      'yup.array': {\n        'yup.array.of': 'const schema = array().defined().of(mixed())',\n        'yup.array.length': 'const schema = array().defined().length(5)',\n        'yup.array.min': 'const schema = array().defined().min(5)',\n        'yup.array.max': 'const schema = array().defined().max(5)',\n      },\n      'yup.object': {\n        'yup.object.shape': 'const schema = object().defined().shape({ key: mixed() })',\n        'yup.object.noUnknown': 'const schema = object().defined().strict().noUnknown().shape({ key: mixed() })',\n      },\n    }\n\n    return {\n      schemasOfType,\n    }\n  },\n})\n</script>\n","import { addMethod, string, AnySchema } from 'yup'\nimport { fake } from '../../faker'\nimport { fakeDedicatedTest } from 'yup-schema-faker'\n\n// Extend json method for string schema\naddMethod(string, 'json', function (schema: AnySchema) {\n  return this.test({\n    name: 'json',\n    params: {\n      schema,\n    },\n    test(value: unknown) {\n      try {\n        const parsedValue = JSON.parse(value as string)\n        return schema.isValidSync(parsedValue)\n      } catch (error) {\n        return false\n      }\n    },\n  })\n})\n\n// When the json test occurs, this faker will be run.\nfakeDedicatedTest(string, 'json', schema => {\n  // Find the test and extract its schema\n  const innerSchema = schema.tests.find(test => test.OPTIONS.name === 'json')?.OPTIONS.params?.schema as AnySchema\n  // Generate a fake data by given schema and stringify it.\n  return JSON.stringify(fake(innerSchema))\n})\n","import { MixedSchema } from 'yup'\nimport { addFaker, MixedFaker } from 'yup-schema-faker'\n\n// Define a custom schema\nclass CustomMixedSchema extends MixedSchema {\n  static create() {\n    return new CustomMixedSchema()\n  }\n\n  // yup-schema-faker use type to distinguish diffrent schema\n  // Here we just rename it to simulate that it is not built-in schema\n  type = 'custom-mixed'\n}\nconst customMixed = () => new CustomMixedSchema()\n\n// Since the type of CustomMixedSchema is changed, you must have to register it to distinguish the schema.\n// We register the custom schema and simply use the existing faker to fake the schema.\naddFaker(customMixed, MixedFaker)\n\n// Expose to window for demo\n;(window as any).customMixed = customMixed\n","<template lang=\"pug\">\nLink(label=\"custom\" level=\"1\")\ntemplate(v-for=\"schemas, type of schemasOfType\" :key=\"type\")\n  Link(:label=\"type\" level=\"2\")\n\n  template(v-for=\"schema, label of schemas\" :key=\"schema\")\n    demo-generator(:label=\"label + ''\" :snippet=\"schema\")\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport './string-json'\nimport './custom-mixed'\n\nexport default defineComponent({\n  setup() {\n    const schemasOfType = {\n      'custom.fakeDedicatedTest': {\n        'custom.fakeDedicatedTest.yup.string.json': `\n// fake a list of emails and stringify it.\nconst schema = string()\n  .defined()\n  .strict()\n  .json(\n    array()\n      .defined()\n      .of(\n        string()\n          .defined()\n          .email()\n      )\n  )\n`.trim(),\n      },\n      'custom.addFaker': {\n        'custom.addFaker.customMixed': `\n// just like yup.mixed\nconst schema = customMixed()\n  .defined()\n  .strict()\n  .oneOf([42])\n`.trim(),\n      },\n    }\n\n    return {\n      schemasOfType,\n    }\n  },\n})\n</script>\n","<template lang=\"pug\">\nbutton.flex.items-center.justify-center.fixed.z-10.rounded-full.h-12.w-12.border.text-black.right-5.bottom-5.border-gray-400.bg-gray-200(@click=\"backToTop\") Top\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nexport default defineComponent({\n  setup() {\n    const backToTop = () => {\n      window.scrollTo({\n        behavior: 'smooth',\n        top: 0,\n      })\n    }\n\n    return {\n      backToTop,\n    }\n  },\n})\n</script>\n","<template lang=\"pug\">\n.app.bg-white.p-2\n  .mx-auto.w-screen-96.max-w-1080\n    Header\n    br\n    hr\n    ToC\n    hr\n    Playground\n    hr\n    Seed\n    hr\n    Full\n    hr\n    Custom\nBackToTop\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport ToC from './views/ToC/Index.vue'\nimport Header from './views/Header.vue'\nimport Playground from './views/Playground.vue'\nimport Seed from './views/Seed.vue'\nimport Full from './views/Full.vue'\nimport Custom from './views/Custom/index.vue'\nimport BackToTop from './views/BackToTop.vue'\n\nexport default defineComponent({\n  components: {\n    ToC,\n    Header,\n    Playground,\n    Seed,\n    Full,\n    Custom,\n    BackToTop,\n  },\n})\n</script>\n\n<style scoped>\n.app {\n  min-width: 320px;\n  min-height: 10000px;\n}\n\n.w-screen-96 {\n  width: 96vw;\n}\n\n.max-w-1080 {\n  max-width: 1080px;\n}\n</style>\n","<template lang=\"pug\">\nbutton.text-blue-400.px-2.m-0.rounded.border.border-blue-400(v-bind=\"$attrs\" @click=\"() => handleClick()\") {{ text }}\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue'\n\nexport default defineComponent({\n  emits: ['click'],\n  setup(_, context) {\n    const text = ref('Fake')\n    const handleClick = async () => {\n      context.emit('click')\n      text.value = 'Faked!'\n      setTimeout(() => {\n        text.value = 'Fake'\n      }, 500)\n    }\n    return {\n      text,\n      handleClick,\n    }\n  },\n})\n</script>\n","<template lang=\"pug\">\nbutton.text-black.px-2.m-0.ml-1.rounded.border.border-gray-400(@click=\"handleClick\") {{ buttonLabel }}\ninput(v-show=\"inputVisible\" ref=\"input\" :value=\"text === undefined ? 'undefined' : JSON.stringify(text)\")\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, nextTick, ref } from 'vue'\n\nexport default defineComponent({\n  props: {\n    text: {\n      required: true,\n    },\n  },\n  setup(_) {\n    const buttonLabel = ref('Copy')\n\n    const input = ref()\n    const inputVisible = ref(false)\n    const handleClick = async () => {\n      inputVisible.value = true\n      await nextTick()\n      input.value.select()\n      input.value.setSelectionRange(0, 99999)\n      document.execCommand('copy')\n      inputVisible.value = false\n\n      buttonLabel.value = 'Copied!'\n      setTimeout(() => {\n        buttonLabel.value = 'Copy'\n      }, 500)\n    }\n    return {\n      input,\n      inputVisible,\n      buttonLabel,\n      handleClick,\n    }\n  },\n})\n</script>\n","<template lang=\"pug\">\npre\n  code.rounded.javascript(ref=\"snippet\" v-bind=\"$attrs\" :contenteditable=\"contenteditable\" @input.native=\"onInput\" @blur.native=\"onBlur\") {{ normalizedData }}\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, onMounted, onUpdated, ref, watchEffect } from 'vue'\nimport hljs from 'highlight.js'\nimport 'highlight.js/styles/atom-one-dark.css'\n\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    data: {\n      required: true,\n    },\n    isSnippet: {\n      default: false,\n      type: Boolean,\n    },\n    contenteditable: {\n      default: false,\n      type: Boolean,\n    },\n  },\n  emits: ['change'],\n  setup(props, { emit }) {\n    const snippet = ref()\n    const highlight = () => {\n      // @ts-ignore\n      hljs.highlightElement(snippet.value)\n    }\n    onMounted(highlight)\n    onUpdated(highlight)\n\n    const normalizedData = computed(() => {\n      if (props.data === undefined) return 'undefined'\n      if (props.data === null) return 'null'\n      if (props.data instanceof Date) return new Date(props.data).toString()\n      if (props.isSnippet) return props.data\n      return JSON.stringify(\n        props.data,\n        (_, value) => {\n          if (value === undefined) return '__undefined'\n          try {\n            if (new Date(value).toISOString() === value) return new Date(value).toString()\n          } catch (error) {}\n          return value\n        },\n        2,\n      ).replace(/\"__undefined\"/g, 'undefined')\n    })\n\n    const changedSnippet = ref()\n    watchEffect(() => {\n      changedSnippet.value = props.data\n    })\n    const onInput = (e: any) => {\n      changedSnippet.value = e.target.innerText\n    }\n    const onBlur = () => {\n      emit('change', changedSnippet.value ?? props.data)\n    }\n\n    return {\n      snippet,\n      normalizedData,\n      onInput,\n      onBlur,\n    }\n  },\n})\n</script>\n","<template lang=\"pug\">\nLink(v-if=\"label\" :label=\"label\" level=\"3\")\ndiv.mb-5\n  fake-button(@click=\"() => fake()\")\n  copy-button(:text=\"data\")\n  button.text-black.px-2.m-0.ml-1.rounded.border.border-gray-400(@click=\"() => visible = !visible\" :class=\"{visible}\") Show {{ visible ? 'result' : 'snippet' }}\n  Data.mt-1(v-show=\"visible\" :data=\"snippet\" is-snippet :class=\"{visible}\" :contenteditable=\"contenteditable\" @change=\"value => emit('update:snippet', value)\")\n  Data.mt-1(v-show=\"!visible\" :data=\"data\")\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue'\nimport 'highlight.js/styles/atom-one-dark.css'\nimport FakeButton from './FakeButton.vue'\nimport CopyButton from './CopyButton.vue'\nimport Data from './Data.vue'\n\nexport default defineComponent({\n  inheritAttrs: false,\n  components: {\n    FakeButton,\n    CopyButton,\n    Data,\n  },\n  props: {\n    label: {\n      default: '',\n      type: String,\n    },\n    fake: {\n      required: true,\n      type: Function,\n    },\n    snippet: {\n      required: true,\n      type: String,\n    },\n    data: {\n      required: true,\n    },\n    contenteditable: {\n      default: false,\n      type: Boolean,\n    },\n  },\n  emits: ['update:snippet'],\n  setup(_, { emit }) {\n    return {\n      visible: ref(false),\n      emit,\n    }\n  },\n})\n</script>\n","<template lang=\"pug\">\nPreview(:fake=\"fake\" :snippet=\"snippet\" :data=\"data\" :label=\"label\")\n</template>\n\n<script lang=\"ts\">\nimport { fake } from '../faker'\nimport { defineComponent, onMounted, ref as vueRef } from 'vue'\nimport { mixed, bool, boolean, string, number, date, array, object, ref, lazy } from 'yup'\nimport * as yup from 'yup'\n\nexport default defineComponent({\n  props: {\n    label: {\n      default: '',\n      type: String,\n    },\n    snippet: {\n      required: true,\n      type: String,\n    },\n    context: Object,\n  },\n  setup(props) {\n    const data = vueRef()\n    const schema = vueRef()\n    const doFake = () => {\n      try {\n        schema.value = new Function(\n          'yup, mixed, bool, boolean, string, number, date, array, object, ref, lazy',\n          '\"use strict\"; ' + props.snippet + '; return schema;',\n        )(yup, mixed, bool, boolean, string, number, date, array, object, ref, lazy)\n        data.value = fake(schema.value, { context: props.context })\n      } catch (error) {\n        alert('Syntax error, please open console to see more info.')\n        console.error(error)\n      }\n    }\n\n    onMounted(() => {\n      doFake()\n    })\n\n    return {\n      data,\n      schema,\n      fake: doFake,\n    }\n  },\n})\n</script>\n","<template lang=\"pug\">\na(:href=\"`#${label}`\")\n  h1.mt-5.mb-1.text-black(v-if=\"level == 1\" :id=\"label\") {{ label }}\n  h2.mt-5.mb-1.text-black(v-else-if=\"level == 2\" :id=\"label\") {{ label }}\n  h3.mt-5.mb-1.text-black(v-else-if=\"level == 3\" :id=\"label\") {{ label }}\n  h4.mt-5.mb-1.text-black(v-else-if=\"level == 4\" :id=\"label\") {{ label }}\n  h5.mt-5.mb-1.text-black(v-else-if=\"level == 5\" :id=\"label\") {{ label }}\n  h6.mt-5.mb-1.text-black(v-else-if=\"level == 6\" :id=\"label\") {{ label }}\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nexport default defineComponent({\n  props: {\n    level: {\n      required: true,\n      type: [String, Number],\n    },\n    label: {\n      required: true,\n      type: String,\n    },\n  },\n})\n</script>\n","import { createApp, nextTick } from 'vue'\nimport App from './App.vue'\nimport Preview from './components/Preview.vue'\nimport DemoGenerator from './components/DemoGenerator.vue'\nimport Link from './components/Link.vue'\nimport './index.css'\nimport { isInit } from './faker'\n\nconst app = createApp(App)\napp.component('Preview', Preview)\napp.component('DemoGenerator', DemoGenerator)\napp.component('Link', Link)\napp.mixin({\n  mounted() {\n    nextTick(() => {\n      isInit.value = false\n    })\n  },\n})\napp.mount('#app')\n"],"names":["modulePath","importFunctionName","Function","error","baseURL","URL","location","cleanup","script","revokeObjectURL","src","remove","url","Promise","resolve","reject","absURL","self","moduleMap","moduleBlob","Blob","type","Object","assign","document","createElement","createObjectURL","[object Object]","Error","head","appendChild","p","defineComponent","name","props","isSection","el","href","startsWith","window","origin","toToC","id","hash","slice","innerText","descendants","level","toToCTree","tocTree","toc","split","length","__assign","push","components","ToC","visible","ref","async","nextTick","value","Array","from","querySelectorAll","filter","map","reduce","setup","reloadToClearSeedValue","search","VERSION","__VERSION__","searchParams","URLSearchParams","key","get","decodeURIComponent","query","set","encodeURIComponent","history","pushState","newUrl","pathname","toString","path","seedValue","JSON","parse","stringify","Math","floor","random","isInit","fake","schema","option","yupSchemaFake","inheritAttrs","defaultCode","trim","custom","reactive","context","snippet","yup","mixed","bool","boolean","string","number","date","array","object","lazy","data","searchParamKey","onUpdateSnippet","doFake","yup.array","of","yup.object","yup.boolean","yup.number","yup.string","yup.date","reloadToResetSeedValue","reload","schemasOfType","yup.ref","yup.lazy","yup.mixed","yup.mixed.default","yup.mixed.nullable","yup.mixed.required","yup.mixed.notRequired","yup.mixed.defined","yup.mixed.oneOf","yup.mixed.notOneOf","yup.mixed.when","yup.boolean.isTrue","yup.boolean.isFalse","yup.number.min","yup.number.max","yup.number.moreThan","yup.number.lessThan","yup.number.positive","yup.number.negative","yup.number.integer","yup.date.min","yup.date.max","yup.string.required","yup.string.length","yup.string.min","yup.string.max","yup.string.matches","yup.string.email","yup.string.url","yup.string.uuid","yup.string.trim","yup.string.lowercase","yup.string.uppercase","yup.array.of","yup.array.length","yup.array.min","yup.array.max","yup.object.shape","yup.object.noUnknown","addMethod","this","test","params","parsedValue","isValidSync","fakeDedicatedTest","innerSchema","tests","find","OPTIONS","MixedSchema","CustomMixedSchema","customMixed","addFaker","MixedFaker","custom.fakeDedicatedTest","custom.fakeDedicatedTest.yup.string.json","custom.addFaker","custom.addFaker.customMixed","backToTop","scrollTo","behavior","top","Header","Playground","Seed","Full","Custom","BackToTop","emits","_","text","handleClick","emit","required","buttonLabel","input","inputVisible","select","setSelectionRange","execCommand","isSnippet","default","Boolean","contenteditable","highlight","highlightElement","normalizedData","computed","Date","toISOString","replace","changedSnippet","onInput","e","target","onBlur","FakeButton","CopyButton","Data","label","String","vueRef","Number","app","createApp","App","component","Preview","DemoGenerator","Link","mixin","mount"],"mappings":"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"}